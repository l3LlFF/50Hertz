test_data
apply(test_data, 2, function(x) { test_data[is.na(test_data)] <- mean(x[!is.na(x)]) })
test-data
test_data
test_data[is.na(test_data)] <-apply(test_data, 2, function(x) { mean(x[!is.na(x)]) })
test_data
test_data[is.na(test_data)] <-apply(test_data, 2, function(x) { mean(x[!is.na(x)]) })
test_data[is.na(test_data)] <-apply(test_data, 2, function(x) { mean(x[!is.na(x)]) })
test_data
na_rm(test_data)
na_rm  <- function(x){
x[is.na(x)] <- apply(x, 2, function(y) { mean(y[!is.na(y)]) })
return(x)
}
na_rm(test_data)
apply(x, 2, mean, na.rm = T)
apply(test_data, 2, mean, na.rm = T)
test_data <- as.data.frame(list(V1 = c(NA, NA, NA, NA, 13, 12, 9, 10, 8, 9, 11, 11, 10, 12, 9), V2 = c(NA, 12, 8, NA, 11, 11, 9, 8, 8, 10, 10, 11, 10, 10, 10), V3 = c(NA, 5, NA, 13, 12, 11, 11, 14, 8, 12, 8, 8, 10, 10, 8), V4 = c(10, 10, 10, 10, 13, 10, 11, 7, 12, 10, 7, 10, 13, 10, 9)))
apply(test_data, 2, mean, na.rm = T)
test_data[is.na(test_data)]
test_data[is.na(test_data)]
test_data[is.na(test_data)] <- apply(test_data, 2, mean, na.rm = T)
test_data
na.aggregate(test_data)
fread("Netzeinspeisung_2015.csv", header=F)
fread("Netzeinspeisung_2015.csv", header=FALSE)
library(data.table)
fread("Netzeinspeisung_2015.csv", header=FALSE)
fread("Input/Netzeinspeisung_2015.csv", header=FALSE)
fread("/Input/Netzeinspeisung_2015.csv", header=FALSE)
fread("../Input/Netzeinspeisung_2015.csv", header=FALSE)
fread("Input/Netzeinspeisung_2015.csv", header=FALSE)
fread("Netzeinspeisung_2015.csv", header=FALSE)
test <- data.frame(a=rnorm(300), b=rnorm(300))
write.csv(test,"a.csv")
setwd("/Users/apple/l3LlFF/Internship")
fread("Input/Netzeinspeisung_2015.csv", header=FALSE)
fread("Netzeinspeisung_2015.csv", header=FALSE)
getwd()=='/Users/apple/l3LlFF/Internship'
fread("Netzeinspeisung_2015.csv")
fread("Netzeinspeisung_2015.csv", header=FALSE)
fread("Netzeinspeisung_2015.csv", header=FALSE)
sessionInfo()
fread("us-countries.csv", header=FALSE)
fread("us-counties.csv", header=FALSE)
fread("us-counties.csv", nrows = 10)
setwd("/Users/apple/l3LlFF/Internship/task1")
fread("us-counties.csv", nrows = 10)
fread("Netzeinspeisung_2015.csv", header=FALSE)
fread("Netzeinspeisung_2015.csv", header=FALSE, nrows=3)
fread("Netzeinspeisung_2015.csv", header=TRUE, nrows=3)
fread("Netzeinspeisung_2015.csv", header=TRUE, nrows=3, skip=4)
fread("Netzeinspeisung_2015.csv", header=TRUE, nrows=3, skip=4, sep=';')
fread("Netzeinspeisung_2015.csv", header=TRUE, nrows=3, skip=4, sep=";")
fread("Netzeinspeisung_2015.csv", header=TRUE, nrows=3, skip=4, sep=";", quote="")
fread("Netzeinspeisung_2015.csv", header=TRUE, nrows=3, skip=4, sep=";", quote="")
test <- data.frame(a=rnorm(300), b=rnorm(300))
fread("Netzeinspeisung_2015.csv", header=TRUE, skip=4, sep=";", quote="")
fread("us-counties.csv", nrows = 10)
fread("Netzeinspeisung_2015.csv", skip=4)
fread("Netzeinspeisung_2015.csv", skip=4, header=TRUE)
fread("Netzeinspeisung_2015.csv", skip=4, header=TRUE, sep=";")
fread("Netzeinspeisung_2015.csv", skip=4, header=TRUE, sep=";", nrows=3)
fread("Netzeinspeisung_2015.csv", skip=5, header=F, sep=";", nrows=3)
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)
fread("us-counties.csv", nrows = 10)
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)$V1
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)$V2
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)$V3
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)$V4
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)$V5
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3, quote="")
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3, quote="")
list.files(pattern="*.csv")
setwd("/Users/apple/l3LlFF/Internship/task1/Input")
list.files(pattern="*.csv")
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3, quote="")
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3, quote="", sep=";")
getwd()=='/Users/apple/l3LlFF/Internship'
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3, quote="", sep=";")
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)
fread("Netzeinspeisung_2015.csv", skip=5, header=T, nrows=3)
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3, sep=";")
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3, sep=";", sep2=";")
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3, sep=";", sep2=";")
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)
getwd()=='/Users/apple/l3LlFF/Internship'
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)
getwd()=='/Users/apple/l3LlFF/Internship'
fread("Netzeinspeisung_2015.csv", header=TRUE, skip=4, sep=";", quote="")
test <- data.frame(a=rnorm(300), b=rnorm(300))
write.csv(test,"a.csv")
fread("Netzeinspeisung_2015.csv", skip=5, header=F, nrows=3)
fread("Netzeinspeisung_2015.csv", skip=4, header=T, nrows=3)
list.files(pattern="*.csv")
lapply(list.files(pattern="*.csv"), fread, skip=4, header=T, nrows=3)
lapply(list.files(pattern="*.csv"), fread, skip=4, header=T)
temp <- lapply(list.files(pattern="*.csv"), fread, skip=4, header=T)
temp
typeof(temp)
unlist(temp)
do.call(c, unlist(temp, recursive=FALSE))
Reduce(merge, temp)
temp
Reduce(merge, temp)
merge(temp)
temp[0]
temp
temp[:, 1]
temp
temp[[1]]
typeof(merge(temp))
typeof(temp[[1]])
fread("us-counties.csv", nrows = 10)
fread("Netzeinspeisung_2015.csv", skip=4, header=T, nrows=3)
typeof(fread("Netzeinspeisung_2015.csv", skip=4, header=T, nrows=3))
data.table::fread("us-counties.csv", nrows = 10)
data.table::fread("Netzeinspeisung_2015.csv", skip=4, header=T, nrows=3)
typeof(data.table::fread("Netzeinspeisung_2015.csv", skip=4, header=T, nrows=3))
data.table::fread("Netzeinspeisung_2015.csv", skip=4, header=T, nrows=3)
class(fread("Netzeinspeisung_2015.csv", skip=4, header=T, nrows=3))
fread("Netzeinspeisung_2015.csv", skip=4, header=T, nrows=3)
a <- fread("Netzeinspeisung_2015.csv", skip=4, header=T, nrows=3)
a
setNames(a, c("date", "start", "end", "w"))
setNames(a, c("date", "start", "end", "w", "e"))
temp
rbind(temp[[1]], temp[[2]])
rbind(temp)
do.call("rbind", temp)
library(data.table)
setwd("/Users/apple/l3LlFF/Internship/task1/Input")
data <- lapply(list.files(pattern="*.csv"), fread, skip=4, header=T)
data <- do.call("rbind", data)
data
data[, V5:=NULL]
data
# Set column names
setNames(data, c("date", "from", "to", "value [MW]"))
# Set column names
setNames(data, c("date", "from", "to", "MW"))
data[[1]]
data[1, 1]
data[1, 1] + data[1, 2]
data[1, 2]
typeof(data[1, 1])
data[1, 1]
data$date
# Set column names
setNames(data, c("date", "from", "to", "MW"))
data
data
setNames(data, c("date", "from", "to", "MW"))
# Set column names
setnames(data, c("Datum", "Von", "bis", "MW"), c("date", "from", "to", "MW"))
data
data$date
data$date + data$from
c(data$date, data$from)
paste(data$date, data$from)
data$from = paste(data$date, data$from)
data
data$from
data$to = paste(data$date, data$to)
data$to
data[, date:=NULL]
date
data
data
library(lubridate)
library(lubridate, warn.conflicts = FALSE)
data
data[1000:,]
data[1000:1010,]
data[2000:2010,]
parse_date_time(data$from, "%d.%m.%y %H:%M")
data$to = parse_date_time(data$to, "%d.%m.%y %H:%M")
data
data$from
data$from = parse_date_time(data$from, "%d.%m.%y %H:%M")
data$to = parse_date_time(data$to, "%d.%m.%y %H:%M")
data$from
data
library(data.table)
library(lubridate, warn.conflicts = FALSE)
# Set working directory
setwd("/Users/apple/l3LlFF/Internship/task1/Input")
# Get list of Data.Tables and merge it into one Data.Table
data <- lapply(list.files(pattern="*.csv"), fread, skip=4, header=T)
data <- do.call("rbind", data)
# Drop useless column (?)
data[, V5:=NULL]
# Set column names
setnames(data, c("Datum", "Von", "bis", "MW"), c("date", "from", "to", "MW"))
# Adding datetime columns
data$from = paste(data$date, data$from)
data$to = paste(data$date, data$to)
# Dropping date column
data[, date:=NULL]
data
data$from = parse_date_time(data$from, "%d.%m.%y %H:%M")
data
data$to = parse_date_time(data$to, "%d.%m.%y %H:%M")
data
data$to
data$from
data
head(data$from)
head(data$to)
head(data)
$to
head(data$to)
head(data$from)
lapply(list.files(pattern="*.csv"), fread, skip=4, header=T)
View(data)
View(data)
library(data.table)
library(lubridate, warn.conflicts = FALSE)
# Set working directory
setwd("/Users/apple/l3LlFF/Internship/task1/Input")
# Get list of Data.Tables and merge it into one Data.Table
data <- lapply(list.files(pattern="*.csv"), fread, skip=4, header=T)
rbindlist(data)
library(data.table)
library(lubridate, warn.conflicts = FALSE)
# Set working directory
setwd("/Users/apple/l3LlFF/Internship/task1/Input")
# Get list of Data.Tables and merge it into one Data.Table
data <- lapply(list.files(pattern="*.csv"), fread, skip=4, header=T)
#Alternative (?)
#data <- do.call("rbind", data)
rbindlist(data)
# Drop useless column (?)
data[, V5:=NULL]
data
#Alternative (?)
#data <- do.call("rbind", data)
rbindlist(data)
data
#Alternative (?)
#data <- do.call("rbind", data)
data <- rbindlist(data)
data
# Drop useless column (?)
data[, V5:=NULL]
# Set column names
setnames(data, c("Datum", "Von", "bis", "MW"), c("date", "from", "to", "MW"))
# Adding datetime columns
data$from = paste(data$date, data$from)
data$to = paste(data$date, data$to)
# Dropping date column
data[, date:=NULL]
# Parsing string to DateTime
data$from = parse_date_time(data$from, "%d.%m.%y %H:%M")
data$to = parse_date_time(data$to, "%d.%m.%y %H:%M")
# printing columns
head(data$from)
head(data$to)
data
fread("Netzeinspeisung_2015.csv", skip=4, header=T)
fread("Netzeinspeisung_2015.csv", skip=4, header=T, blank.lines.skip = TRUE)
fread("Netzeinspeisung_2015.csv", skip=4, header=T, na.strings = NULL)
fread("Netzeinspeisung_2015.csv", skip=4, header=T, na.strings = NULL)
fread("Netzeinspeisung_2015.csv", skip=4, header=T, blank.lines.skip = TRUE)
fread("Netzeinspeisung_2015.csv", skip=4, header=T, blank.lines.skip = TRUE)
fread("Netzeinspeisung_2015.csv", skip=4, header=T, na.strings="?")
fread("Netzeinspeisung_2015.csv", skip=4, header=T, na.strings="?")
library(data.table)
library(lubridate, warn.conflicts = FALSE)
# Set working directory
setwd("/Users/apple/l3LlFF/Internship/task1/Input")
# Get list of Data.Tables and merge it into one Data.Table
data <- lapply(list.files(pattern="*.csv"), fread, skip=4, header=T)
#Alternative (?)
#data <- do.call("rbind", data)
data <- rbindlist(data)
# Drop useless column (?)
data[, V5:=NULL]
# Set column names
setnames(data, c("Datum", "Von", "bis", "MW"), c("date", "from", "to", "MW"))
# Adding datetime columns
data$from = paste(data$date, data$from)
data$to = paste(data$date, data$to)
# Dropping date column
data[, date:=NULL]
# Parsing string to DateTime
data$from = parse_date_time(data$from, "%d.%m.%y %H:%M")
data$to = parse_date_time(data$to, "%d.%m.%y %H:%M")
# printing columns
head(data$from)
head(data$to)
library(hrbrthemes)
install.packages("ggplot2")
install.packages("dplyr")
install.packages("plotly")
install.packages("hrbrthemes")
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
library(dplyr)
library(plotly)
library(hrbrthemes)
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered.csv", header=T)
data$date <- as.Date(data$date)
data
p <- data %>%
ggplot( aes(x=date, y=value)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
p <- ggplotly(p)
p
data
head(data)
p <- data %>%
ggplot( aes(x=date, y=MW)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
p <- ggplotly(p)
p <- data %>%
ggplot( aes(x=date, y=to)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
p <- ggplotly(p)
library(data.table)
library(lubridate, warn.conflicts = FALSE)
# Set working directory
setwd("/Users/apple/l3LlFF/Internship/task1/Input")
# Get list of Data.Tables and merge it into one Data.Table
data <- lapply(list.files(pattern="*.csv"), fread, skip=4, header=T)
#Alternative (?)
#data <- do.call("rbind", data)
data <- rbindlist(data)
# Drop useless column (?)
data[, V5:=NULL]
# Set column names
setnames(data, c("Datum", "Von", "bis", "MW"), c("date", "from", "to", "MW"))
# Adding datetime columns
data$from = paste(data$date, data$from)
data$to = paste(data$date, data$to)
# Dropping date column
data[, date:=NULL]
# Parsing string to DateTime
data$from = parse_date_time(data$from, "%d.%m.%y %H:%M")
data$to = parse_date_time(data$to, "%d.%m.%y %H:%M")
# printing columns
head(data$from)
head(data$to)
(ggplot2)
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
p <- data %>%
ggplot( aes(x=date, y=to)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
head(data)
p <- ggplotly(p)
p
p <- ggplotly(p)
head(data)
p <- data %>%
ggplot( aes(x=from, y=MW)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
head(data)
p <- ggplotly(p)
p
data
data[:100,]
data[1:100,]
p <- data[1:100] %>%
ggplot( aes(x=from, y=MW)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
p <- ggplotly(p)
p
p <- data[22000:] %>%
ggplot( aes(x=from, y=MW)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
p <- ggplotly(p)
p
p <- data[22000:228000] %>%
ggplot( aes(x=from, y=MW)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
p <- ggplotly(p)
p
p <- data[220000:228000] %>%
ggplot( aes(x=from, y=MW)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("bitcoin price ($)") +
theme_ipsum()
p <- ggplotly(p)
p
p <- data[220000:228000] %>%
ggplot( aes(x=from, y=MW)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("MW") +
theme_ipsum()
p <- ggplotly(p)
p
data
data$from
data$from$hr
data$from.time
factor("08:01:01")
format(data$from,"%H")
format(data$from,"%H") == 14
sum(format(data$from,"%H") == 14)
p <- data[format(data$from,"%H") == 12] %>%
ggplot( aes(x=from, y=MW)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("MW") +
theme_ipsum()
p <- ggplotly(p)
p
p <- data[format(data$from,"%H") == 18] %>%
ggplot( aes(x=from, y=MW)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("MW") +
theme_ipsum()
p <- ggplotly(p)
p
p <- data[format(data$from,"%H") == 10] %>%
ggplot( aes(x=from, y=MW)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("MW") +
theme_ipsum()
p <- ggplotly(p)
p
p <- data[format(data$from,"%H") == 12] %>%
ggplot( aes(x=from, y=MW)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("MW") +
theme_ipsum()
p <- ggplotly(p)
p
head(data$to)
tail(data$to)
library(lubridate, warn.conflicts = F)
library(data.table)
library(lubridate, warn.conflicts = F)
# Set working directory
setwd("/Users/apple/l3LlFF/Internship/task1/Input")
# Get list of Data.Tables and merge it into one Data.Table
data <- lapply(list.files(pattern="*.csv"), fread, skip=4, header=T)
#Alternative (?)
#data <- do.call("rbind", data)
data <- rbindlist(data)
# Drop useless column (?)
data[, V5:=NULL]
# Set column names
setnames(data, c("Datum", "Von", "bis", "MW"), c("date", "from", "to", "MW"))
# Adding datetime columns
data$from = paste(data$date, data$from)
data$to = paste(data$date, data$to)
# Dropping date column
data[, date:=NULL]
# Parsing string to DateTime
data$from = parse_date_time(data$from, "%d.%m.%y %H:%M")
data$to = parse_date_time(data$to, "%d.%m.%y %H:%M")
# printing columns
head(data$from)
head(data$to)
library(data.table)
library(lubridate, warn.conflicts = F)
# Set working directory
setwd("/Users/apple/l3LlFF/Internship/task1/Input")
# Get list of Data.Tables and merge it into one Data.Table
data <- lapply(list.files(pattern="*.csv"), fread, skip=4, header=T)
data
#Alternative (?)
#data <- do.call("rbind", data)
data <- rbindlist(data)
# Drop useless column (?)
data[, V5:=NULL]
# Set column names
setnames(data, c("Datum", "Von", "bis", "MW"), c("date", "from", "to", "MW"))
# Adding datetime columns
data$from = paste(data$date, data$from)
data$to = paste(data$date, data$to)
data
